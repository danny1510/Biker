// <auto-generated />
using System;
using Biker.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Biker.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200603040147_initialdb")]
    partial class initialdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Biker.Web.Data.Entities.BikeMakerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("BikeMakers");
                });

            modelBuilder.Entity("Biker.Web.Data.Entities.BikeTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("BikeTypes");
                });

            modelBuilder.Entity("Biker.Web.Data.Entities.MotorbikeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FrontTire")
                        .HasMaxLength(5);

                    b.Property<string>("ImageUrl");

                    b.Property<int?>("MakerId");

                    b.Property<int>("MaxWidthTireF")
                        .HasMaxLength(5);

                    b.Property<int>("MaxWidthTireR")
                        .HasMaxLength(50);

                    b.Property<int>("MinWidthTireF")
                        .HasMaxLength(50);

                    b.Property<int>("MinWidthTireR")
                        .HasMaxLength(50);

                    b.Property<int?>("MotorbikeTypeId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("RearTire")
                        .HasMaxLength(5);

                    b.Property<DateTime>("YearSince");

                    b.Property<DateTime>("YearUntil");

                    b.HasKey("Id");

                    b.HasIndex("MakerId");

                    b.HasIndex("MotorbikeTypeId");

                    b.ToTable("Motorbikes");
                });

            modelBuilder.Entity("Biker.Web.Data.Entities.TypeMakerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl");

                    b.Property<int?>("MakerId");

                    b.Property<int?>("MotorbikeTypeId");

                    b.HasKey("Id");

                    b.HasIndex("MakerId");

                    b.HasIndex("MotorbikeTypeId");

                    b.ToTable("TypeMakers");
                });

            modelBuilder.Entity("Biker.Web.Data.Entities.MotorbikeEntity", b =>
                {
                    b.HasOne("Biker.Web.Data.Entities.BikeMakerEntity", "Maker")
                        .WithMany("Motorbikes")
                        .HasForeignKey("MakerId");

                    b.HasOne("Biker.Web.Data.Entities.BikeTypeEntity", "MotorbikeType")
                        .WithMany("Motorbikes")
                        .HasForeignKey("MotorbikeTypeId");
                });

            modelBuilder.Entity("Biker.Web.Data.Entities.TypeMakerEntity", b =>
                {
                    b.HasOne("Biker.Web.Data.Entities.BikeMakerEntity", "Maker")
                        .WithMany("TypeBrands")
                        .HasForeignKey("MakerId");

                    b.HasOne("Biker.Web.Data.Entities.BikeTypeEntity", "MotorbikeType")
                        .WithMany("TypeBrands")
                        .HasForeignKey("MotorbikeTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
